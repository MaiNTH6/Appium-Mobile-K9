<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-0VAHO8P" ignored="4" name="iPhone 13" tests="11" failures="4" timestamp="2022-09-06T23:16:35 ICT" time="0.166" errors="0">
  <testcase name="@AfterMethod captureScreenshot" time="0.0" classname="tests.BaseTest">
    <failure type="java.lang.IllegalArgumentException" message="Please provide env variable [env]!">
      <![CDATA[java.lang.IllegalArgumentException: Please provide env variable [env]!
at driver.DriverFactory.getDriver(DriverFactory.java:62)
at tests.BaseTest.getDriver(BaseTest.java:36)
at tests.BaseTest.captureScreenshot(BaseTest.java:79)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
... Removed 23 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod captureScreenshot -->
  <testcase name="@AfterMethod captureScreenshot" time="0.0" classname="tests.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod captureScreenshot -->
  <testcase name="@AfterMethod captureScreenshot" time="0.0" classname="tests.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod captureScreenshot -->
  <testcase name="testSth01" time="0.001" classname="api_learning.testNG.TestNGHook02"/>
  <testcase name="testSth02" time="0.001" classname="api_learning.testNG.TestNGHook02"/>
  <testcase name="testParameter" time="0.004" classname="api_learning.testNG.TestParameter"/>
  <testcase name="testParameter" time="0.003" classname="api_learning.testNG.TestParameter02"/>
  <testcase name="testLogin" time="0.003" classname="api_learning.paralled.Login">
    <failure type="java.lang.IllegalArgumentException" message="Please provide env variable [env]!">
        <![CDATA[java.lang.IllegalArgumentException: Please provide env variable [env]!
at driver.DriverFactory.getDriver(DriverFactory.java:62)
at tests.BaseTest.getDriver(BaseTest.java:36)
at api_learning.paralled.Login.testLogin(Login.java:18)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
... Removed 18 stack frames]]>
    </failure>
  </testcase> <!-- testLogin -->
  <testcase name="testLogin" time="0.0" classname="api_learning.paralled.Login">
    <skipped/>
  </testcase> <!-- testLogin -->
  <testcase name="testLogin" time="0.0" classname="api_learning.paralled.Login">
    <skipped/>
  </testcase> <!-- testLogin -->
  <testcase name="testSth03" time="0.003" classname="api_learning.testNG.TestNGHook01">
    <failure type="java.lang.AssertionError" message="ERR Loi roi expected [a] but found [b]">
        <![CDATA[java.lang.AssertionError: ERR Loi roi expected [a] but found [b]
at api_learning.testNG.TestNGHook01.testSth03(TestNGHook01.java:44)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
... Removed 23 stack frames]]>
    </failure>
  </testcase> <!-- testSth03 -->
  <testcase name="testSth04" time="0.003" classname="api_learning.testNG.TestNGHook01">
    <failure type="java.lang.AssertionError" message="The following asserts failed:
	expected [true] but found [false],
	expected [false] but found [true]">
        <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [true] but found [false],
expected [false] but found [true]
at api_learning.testNG.TestNGHook01.testSth04(TestNGHook01.java:60)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
... Removed 20 stack frames]]>
    </failure>
  </testcase> <!-- testSth04 -->
  <testcase name="testSth02" time="0.001" classname="api_learning.testNG.TestNGHook01">
    <failure type="java.lang.RuntimeException" message="FAILED">
        <![CDATA[java.lang.RuntimeException: FAILED
at api_learning.testNG.TestNGHook01.testSth02(TestNGHook01.java:31)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:750)
... Removed 18 stack frames]]>
    </failure>
  </testcase> <!-- testSth02 -->
  <testcase name="testSth01" time="0.0" classname="api_learning.testNG.TestNGHook01">
    <skipped/>
  </testcase> <!-- testSth01 -->
  <testcase name="@BeforeTest beforeTest" time="0.0" classname="api_learning.testNG.BaseTestNG">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase name="@BeforeTest beforeTest" time="0.0" classname="api_learning.testNG.BaseTestNG">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="api_learning.testNG.BaseTestNG">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="api_learning.testNG.BaseTestNG">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
</testsuite> <!-- iPhone 13 -->
